{
	"info": {
		"_postman_id": "bb90a96d-8b51-4149-91cd-a755dd3a8a74",
		"name": "FogFlow-test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5009088"
	},
	"item": [
		{
			"name": "discovery",
			"item": [
				{
					"name": "lookup_nearby_broker",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n       \"entities\":[\n          {\n             \"type\":\"IoTBroker\",\n             \"isPattern\":true\n          }\n       ],\n       \"restriction\":{\n          \"scopes\":[\n             {\n                \"scopeType\":\"nearby\",\n                \"scopeValue\":{\n                   \"latitude\":35.692221,\n                   \"longitude\":139.709059,\n                   \"limit\":1\n                }\n             }\n          ]\n       }\n    }"
						},
						"url": {
							"raw": "http://{{FogFlow}}:{{DISCOVERY_PORT}}/ngsi9/discoverContextAvailability",
							"protocol": "http",
							"host": [
								"{{FogFlow}}"
							],
							"port": "{{DISCOVERY_PORT}}",
							"path": [
								"ngsi9",
								"discoverContextAvailability"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "broker",
			"item": [
				{
					"name": "get_version",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{FogFlow}}:{{BROKER_PORT}}/version",
							"protocol": "http",
							"host": [
								"{{FogFlow}}"
							],
							"port": "{{BROKER_PORT}}",
							"path": [
								"version"
							]
						}
					},
					"response": []
				},
				{
					"name": "create_new_entity",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"contextElements\": [\n            {\n                \"entityId\": {\n                    \"id\": \"Device.temp001\",\n                    \"type\": \"Temperature\",\n                    \"isPattern\": false\n                },\n                \"attributes\": [\n                {\n                  \"name\": \"temp\",\n                  \"type\": \"integer\",\n                  \"value\": 10\n                }\n                ],\n                \"domainMetadata\": [\n                {\n                    \"name\": \"location\",\n                    \"type\": \"point\",\n                    \"value\": {\n                        \"latitude\": 49.406393,\n                        \"longitude\": 8.684208\n                    }\n                },{\n                    \"name\": \"city\",\n                    \"type\": \"string\",\n                    \"value\": \"Heidelberg\"\n                }\n                ]\n            }\n        ],\n        \"updateAction\": \"UPDATE\"\n    }"
						},
						"url": {
							"raw": "http://{{FogFlow}}:{{BROKER_PORT}}/ngsi10/updateContext",
							"protocol": "http",
							"host": [
								"{{FogFlow}}"
							],
							"port": "{{BROKER_PORT}}",
							"path": [
								"ngsi10",
								"updateContext"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_entity_list",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{FogFlow}}:{{BROKER_PORT}}/ngsi10/entity",
							"protocol": "http",
							"host": [
								"{{FogFlow}}"
							],
							"port": "{{BROKER_PORT}}",
							"path": [
								"ngsi10",
								"entity"
							]
						}
					},
					"response": []
				},
				{
					"name": "retrieve_entity_by_id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{FogFlow}}:{{BROKER_PORT}}/ngsi10/entity/Device.temp001",
							"protocol": "http",
							"host": [
								"{{FogFlow}}"
							],
							"port": "{{BROKER_PORT}}",
							"path": [
								"ngsi10",
								"entity",
								"Device.temp001"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_entity_by_id",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"entities\":[{\"id\":\"Device.*\",\"isPattern\":true}]}"
						},
						"url": {
							"raw": "http://{{FogFlow}}:{{BROKER_PORT}}/ngsi10/queryContext",
							"protocol": "http",
							"host": [
								"{{FogFlow}}"
							],
							"port": "{{BROKER_PORT}}",
							"path": [
								"ngsi10",
								"queryContext"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_entity_by_type",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"entities\":[{\"type\":\"Temperature\",\"isPattern\":true}]}"
						},
						"url": {
							"raw": "http://{{FogFlow}}:{{BROKER_PORT}}/ngsi10/queryContext",
							"protocol": "http",
							"host": [
								"{{FogFlow}}"
							],
							"port": "{{BROKER_PORT}}",
							"path": [
								"ngsi10",
								"queryContext"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_entity_by_id",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{FogFlow}}:{{BROKER_PORT}}/ngsi10/entity/Device.temp001",
							"protocol": "http",
							"host": [
								"{{FogFlow}}"
							],
							"port": "{{BROKER_PORT}}",
							"path": [
								"ngsi10",
								"entity",
								"Device.temp001"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "designer",
			"item": [
				{
					"name": "system_info",
					"item": [
						{
							"name": "get_master_info",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://{{FogFlow}}:{{DESIGNER_PORT}}/info/master",
									"protocol": "http",
									"host": [
										"{{FogFlow}}"
									],
									"port": "{{DESIGNER_PORT}}",
									"path": [
										"info",
										"master"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_broker_info",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{FogFlow}}:{{DESIGNER_PORT}}/info/broker",
									"protocol": "http",
									"host": [
										"{{FogFlow}}"
									],
									"port": "{{DESIGNER_PORT}}",
									"path": [
										"info",
										"broker"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_woker_info",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{FogFlow}}:{{DESIGNER_PORT}}/info/worker",
									"protocol": "http",
									"host": [
										"{{FogFlow}}"
									],
									"port": "{{DESIGNER_PORT}}",
									"path": [
										"info",
										"worker"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_task_info",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{FogFlow}}:{{DESIGNER_PORT}}/info/task",
									"protocol": "http",
									"host": [
										"{{FogFlow}}"
									],
									"port": "{{DESIGNER_PORT}}",
									"path": [
										"info",
										"task"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_data_types",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{FogFlow}}:{{DESIGNER_PORT}}/info/type",
									"protocol": "http",
									"host": [
										"{{FogFlow}}"
									],
									"port": "{{DESIGNER_PORT}}",
									"path": [
										"info",
										"type"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "operator",
					"item": [
						{
							"name": "register_operator",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[{\n    \"name\": \"dummy\",\n    \"description\": \"test\",\n    \"parameters\": [\n        {\n            \"name\": \"virtual_network_interface\",\n            \"value\": \"yes\"\n        }\n    ],\n    \"dockerimages\": []\n}]"
								},
								"url": {
									"raw": "http://{{FogFlow}}:{{DESIGNER_PORT}}/operator",
									"protocol": "http",
									"host": [
										"{{FogFlow}}"
									],
									"port": "{{DESIGNER_PORT}}",
									"path": [
										"operator"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_operator_list",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://{{FogFlow}}:{{DESIGNER_PORT}}/operator",
									"protocol": "http",
									"host": [
										"{{FogFlow}}"
									],
									"port": "{{DESIGNER_PORT}}",
									"path": [
										"operator"
									]
								}
							},
							"response": []
						},
						{
							"name": "retrieve_operator_by_name",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{FogFlow}}:{{DESIGNER_PORT}}/operator/dummy",
									"protocol": "http",
									"host": [
										"{{FogFlow}}"
									],
									"port": "{{DESIGNER_PORT}}",
									"path": [
										"operator",
										"dummy"
									]
								}
							},
							"response": []
						},
						{
							"name": "add_docker_image_to_operator",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"fogflow/dummy\",\n    \"hwType\": \"X86\",\n    \"osType\": \"Linux\",\n    \"operatorName\": \"dummy\",\n    \"prefetched\": false,\n    \"tag\": \"latest\"\n}\n"
								},
								"url": {
									"raw": "http://{{FogFlow}}:{{DESIGNER_PORT}}/dockerimage/dummy",
									"protocol": "http",
									"host": [
										"{{FogFlow}}"
									],
									"port": "{{DESIGNER_PORT}}",
									"path": [
										"dockerimage",
										"dummy"
									]
								}
							},
							"response": []
						},
						{
							"name": "list_docker_image_for_operator",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{FogFlow}}:{{DESIGNER_PORT}}/dockerimage/dummy",
									"protocol": "http",
									"host": [
										"{{FogFlow}}"
									],
									"port": "{{DESIGNER_PORT}}",
									"path": [
										"dockerimage",
										"dummy"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete_docker_image_from_operator",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{FogFlow}}:{{DESIGNER_PORT}}/dockerimage/dummy?image=fogflow/dummy",
									"protocol": "http",
									"host": [
										"{{FogFlow}}"
									],
									"port": "{{DESIGNER_PORT}}",
									"path": [
										"dockerimage",
										"dummy"
									],
									"query": [
										{
											"key": "image",
											"value": "fogflow/dummy"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "delete_operator",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{FogFlow}}:{{DESIGNER_PORT}}/dockerimage/dummy?image=fogflow/dummy",
									"protocol": "http",
									"host": [
										"{{FogFlow}}"
									],
									"port": "{{DESIGNER_PORT}}",
									"path": [
										"dockerimage",
										"dummy"
									],
									"query": [
										{
											"key": "image",
											"value": "fogflow/dummy"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "service_topology",
					"item": [
						{
							"name": "register_service",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[{\n  \"topology\": {\n    \"name\": \"test1\",\n    \"description\": \"demo\",\n    \"tasks\": [\n      {\n        \"name\": \"main\",\n        \"operator\": \"dummy\",\n        \"input_streams\": [\n          {\n            \"selected_type\": \"Temperature\",\n            \"selected_attributes\": [\n              \n            ],\n            \"groupby\": \"EntityID\",\n            \"scoped\": false\n          }\n        ],\n        \"output_streams\": [\n          {\n            \"entity_type\": \"Out\"\n          }\n        ]\n      }\n    ]\n  }\n}]"
								},
								"url": {
									"raw": "http://{{FogFlow}}:{{DESIGNER_PORT}}/service",
									"protocol": "http",
									"host": [
										"{{FogFlow}}"
									],
									"port": "{{DESIGNER_PORT}}",
									"path": [
										"service"
									]
								}
							},
							"response": []
						},
						{
							"name": "list_topology",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{FogFlow}}:{{DESIGNER_PORT}}/topology",
									"protocol": "http",
									"host": [
										"{{FogFlow}}"
									],
									"port": "{{DESIGNER_PORT}}",
									"path": [
										"topology"
									]
								}
							},
							"response": []
						},
						{
							"name": "retrieve_topology",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{FogFlow}}:{{DESIGNER_PORT}}/topology/test1",
									"protocol": "http",
									"host": [
										"{{FogFlow}}"
									],
									"port": "{{DESIGNER_PORT}}",
									"path": [
										"topology",
										"test1"
									]
								}
							},
							"response": []
						},
						{
							"name": "list_service",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{FogFlow}}:{{DESIGNER_PORT}}/service",
									"protocol": "http",
									"host": [
										"{{FogFlow}}"
									],
									"port": "{{DESIGNER_PORT}}",
									"path": [
										"service"
									]
								}
							},
							"response": []
						},
						{
							"name": "retrieve_service",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{FogFlow}}:{{DESIGNER_PORT}}/service/test1",
									"protocol": "http",
									"host": [
										"{{FogFlow}}"
									],
									"port": "{{DESIGNER_PORT}}",
									"path": [
										"service",
										"test1"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete_service",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://{{FogFlow}}:{{DESIGNER_PORT}}/service/test1",
									"protocol": "http",
									"host": [
										"{{FogFlow}}"
									],
									"port": "{{DESIGNER_PORT}}",
									"path": [
										"service",
										"test1"
									]
								}
							},
							"response": []
						},
						{
							"name": "add_intent",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"topology\": \"test1\",\n    \"stype\": \"SYN\",\n    \"priority\": {\n        \"exclusive\": false,\n        \"level\": 0\n    },\n    \"qos\": \"NONE\",\n    \"geoscope\": {\n        \"scopeType\": \"global\",\n        \"scopeValue\": \"global\"\n    },\n    \"id\": \"ServiceIntent.001\"\n}"
								},
								"url": {
									"raw": "http://{{FogFlow}}:{{DESIGNER_PORT}}/intent",
									"protocol": "http",
									"host": [
										"{{FogFlow}}"
									],
									"port": "{{DESIGNER_PORT}}",
									"path": [
										"intent"
									]
								}
							},
							"response": []
						},
						{
							"name": "list_intent",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{FogFlow}}:{{DESIGNER_PORT}}/intent",
									"protocol": "http",
									"host": [
										"{{FogFlow}}"
									],
									"port": "{{DESIGNER_PORT}}",
									"path": [
										"intent"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete_intent",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"topology\": \"test1\",\n    \"stype\": \"SYN\",\n    \"priority\": {\n        \"exclusive\": false,\n        \"level\": 0\n    },\n    \"qos\": \"NONE\",\n    \"geoscope\": {\n        \"scopeType\": \"global\",\n        \"scopeValue\": \"global\"\n    },\n    \"id\": \"ServiceIntent.001\"\n}"
								},
								"url": {
									"raw": "http://{{FogFlow}}:{{DESIGNER_PORT}}/intent/ServiceIntent.001",
									"protocol": "http",
									"host": [
										"{{FogFlow}}"
									],
									"port": "{{DESIGNER_PORT}}",
									"path": [
										"intent",
										"ServiceIntent.001"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "fog_function",
					"item": [
						{
							"name": "register_fog_function",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"name\": \"mytest\",\n        \"topology\": {\n            \"name\": \"mytest\",\n            \"description\": \"demo\",\n            \"tasks\": [\n                {\n                    \"name\": \"main\",\n                    \"operator\": \"dummy\",\n                    \"input_streams\": [\n                        {\n                            \"selected_type\": \"Temperature\",\n                            \"selected_attributes\": [],\n                            \"groupby\": \"EntityID\",\n                            \"scoped\": false\n                        }\n                    ],\n                    \"output_streams\": [\n                        {\n                            \"entity_type\": \"Out\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"intent\": {\n            \"id\": \"ServiceIntent.002\",\n            \"topology\": \"myTest\",\n            \"priority\": {\n                \"exclusive\": false,\n                \"level\": 0\n            },\n            \"qos\": \"default\",\n            \"geoscope\": {\n                \"scopeType\": \"global\",\n                \"scopeValue\": \"global\"\n            }\n        },\n        \"status\": \"enabled\"\n    }\n]"
								},
								"url": {
									"raw": "http://{{FogFlow}}:{{DESIGNER_PORT}}/fogfunction",
									"protocol": "http",
									"host": [
										"{{FogFlow}}"
									],
									"port": "{{DESIGNER_PORT}}",
									"path": [
										"fogfunction"
									]
								}
							},
							"response": []
						},
						{
							"name": "list_fog_function",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{FogFlow}}:{{DESIGNER_PORT}}/fogfunction",
									"protocol": "http",
									"host": [
										"{{FogFlow}}"
									],
									"port": "{{DESIGNER_PORT}}",
									"path": [
										"fogfunction"
									]
								}
							},
							"response": []
						},
						{
							"name": "enable_fog_function_by_name",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{FogFlow}}:{{DESIGNER_PORT}}/fogfunction/mytest/enable",
									"protocol": "http",
									"host": [
										"{{FogFlow}}"
									],
									"port": "{{DESIGNER_PORT}}",
									"path": [
										"fogfunction",
										"mytest",
										"enable"
									]
								}
							},
							"response": []
						},
						{
							"name": "disenable_fog_function_by_name",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{FogFlow}}:{{DESIGNER_PORT}}/fogfunction/mytest/disable",
									"protocol": "http",
									"host": [
										"{{FogFlow}}"
									],
									"port": "{{DESIGNER_PORT}}",
									"path": [
										"fogfunction",
										"mytest",
										"disable"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete_fog_function",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{FogFlow}}:{{DESIGNER_PORT}}/fogfunction/mytest",
									"protocol": "http",
									"host": [
										"{{FogFlow}}"
									],
									"port": "{{DESIGNER_PORT}}",
									"path": [
										"fogfunction",
										"mytest"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "device",
					"item": [
						{
							"name": "add_new_device",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"001\",\n    \"type\": \"Temperature\",\n    \"attributes\": {\n        \"protocol\": {\n            \"type\": \"string\",\n            \"value\": \"NGSI-v1\"\n        }\n    },\n    \"metadata\": {\n        \"location\": {\n            \"type\": \"point\",\n            \"value\": {\n                \"latitude\": 38.019492708382884,\n                \"longitude\": -1.17098808157607\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "http://{{FogFlow}}:{{DESIGNER_PORT}}/device",
									"protocol": "http",
									"host": [
										"{{FogFlow}}"
									],
									"port": "{{DESIGNER_PORT}}",
									"path": [
										"device"
									]
								}
							},
							"response": []
						},
						{
							"name": "list_device",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{FogFlow}}:{{DESIGNER_PORT}}/device",
									"protocol": "http",
									"host": [
										"{{FogFlow}}"
									],
									"port": "{{DESIGNER_PORT}}",
									"path": [
										"device"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete_new_device",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"001\",\n    \"type\": \"Temperature\",\n    \"attributes\": {\n        \"protocol\": {\n            \"type\": \"string\",\n            \"value\": \"NGSI-v1\"\n        }\n    },\n    \"metadata\": {\n        \"location\": {\n            \"type\": \"point\",\n            \"value\": {\n                \"latitude\": 38.019492708382884,\n                \"longitude\": -1.17098808157607\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "http://{{FogFlow}}:{{DESIGNER_PORT}}/device/001",
									"protocol": "http",
									"host": [
										"{{FogFlow}}"
									],
									"port": "{{DESIGNER_PORT}}",
									"path": [
										"device",
										"001"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "subscription",
					"item": [
						{
							"name": "add_persistent_subscription",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"entity_type\": \"Temperature\",\n  \"destination_broker\": \"NGSI-LD\",\n  \"reference_url\": \"http://127.0.0.1:9090\",\n  \"tenant\": \"ccoc\"\n}"
								},
								"url": {
									"raw": "http://{{FogFlow}}:{{DESIGNER_PORT}}/subscription",
									"protocol": "http",
									"host": [
										"{{FogFlow}}"
									],
									"port": "{{DESIGNER_PORT}}",
									"path": [
										"subscription"
									]
								}
							},
							"response": []
						},
						{
							"name": "list_subscription",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{FogFlow}}:{{DESIGNER_PORT}}/subscription",
									"protocol": "http",
									"host": [
										"{{FogFlow}}"
									],
									"port": "{{DESIGNER_PORT}}",
									"path": [
										"subscription"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200\", function () {",
					"    pm.response.to.have.status(200);",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "FogFlow",
			"value": "127.0.0.1",
			"type": "string"
		},
		{
			"key": "DISCOVERY_PORT",
			"value": "8090",
			"type": "string"
		},
		{
			"key": "BROKER_PORT",
			"value": "8070",
			"type": "string"
		},
		{
			"key": "DESIGNER_PORT",
			"value": "8080",
			"type": "string"
		},
		{
			"key": "MASTER_PORT",
			"value": "1060",
			"type": "string"
		}
	]
}